module Unidad_Control_ALU(
    input wire [1:0] alu_op,         // Señal ALUOp proveniente de la Unidad de Control
    input wire [2:0] funct3,         // Campo funct3 de la instrucción
    input wire [6:0] funct7,         // Campo funct7 (para instrucciones tipo R)
    output reg [3:0] alu_control     // Señal de control para la ALU
);
    always @(*) begin
        case (alu_op)
            2'b00: begin
                // Operación para LW/SW (Suma: base + offset)
                alu_control = 4'b0010; // Operación de suma
            end
            2'b01: begin
                // Operación para BEQ (Resta: comparar registros)
                alu_control = 4'b0110; // Operación de resta
            end
            2'b10: begin
                // Operaciones tipo R, basadas en funct3 y funct7
                case (funct3)
                    3'b000: begin // ADD o SUB
                        if (funct7 == 7'b0100000) 
                            alu_control = 4'b0110; // SUB
                        else
                            alu_control = 4'b0010; // ADD
                    end
                    3'b111: alu_control = 4'b0000; // AND
                    3'b110: alu_control = 4'b0001; // OR
                    3'b010: alu_control = 4'b0111; // SLT (Set Less Than)
                    default: alu_control = 4'b1111; // Operación no definida
                endcase
            end
            default: alu_control = 4'b1111; // Operación no válida
        endcase
    end
endmodule

